# 나는솔로 뉴스 허브 프로젝트 가이드

> 상세 규칙은 `playbook.mdc`를 참고하세요.

## **시스템 개요**
자동화된 뉴스 수집 및 표시 시스템으로, Edge Functions가 주기적으로 네이버 뉴스 API에서 데이터를 수집하여 Supabase DB에 저장하고, Next.js 웹앱을 통해 사용자에게 표시합니다.

## **프로젝트 구조**
```
src/
├── app/                    # App Router 페이지
│   ├── api/feed/          # 뉴스 피드 API
│   ├── page.tsx           # 메인 페이지 (뉴스 그리드)
│   └── layout.tsx         # 레이아웃
├── components/ui/         # UI 컴포넌트
│   └── NewsCard.tsx       # 뉴스 카드
├── hooks/                 # 커스텀 훅
│   └── useNews.ts         # 뉴스 데이터 훅
└── lib/                   # 유틸리티
    ├── types.ts           # 타입 정의
    ├── supabase.ts        # Supabase 클라이언트
    └── utils.ts           # 유틸리티 함수
```

## **데이터 흐름**
```
네이버 뉴스 API → Edge Functions → Supabase DB → Next.js 웹앱 → 사용자
```

## **핵심 기능**
- **자동 뉴스 수집**: Edge Functions가 주기적으로 실행
- **출연자 추출**: 정규식으로 한국어 이름 패턴 매칭
- **중복 제거**: URL 기반 중복 방지
- **필터링**: 출연자별, 날짜별 필터링
- **페이지네이션**: 대량 데이터 효율적 표시

## **기술 스택**
- **Frontend**: Next.js 15.4.6 App Router + TypeScript + Tailwind CSS
- **Backend**: Supabase Edge Functions + PostgreSQL
- **External API**: 네이버 뉴스 검색 API
- **Deployment**: Vercel + Supabase

## **색상 시스템**
- **출연자 태그**: `bg-pink-100 text-pink-800`
- **키워드 태그**: `bg-blue-100 text-blue-800`
- **메인 브랜드**: `bg-pink-600`
- **배경**: `bg-gray-50`

## **개발 원칙**
1. **실제 데이터만 사용**: 더미데이터 사용 금지
2. **자동화 우선**: 수동 작업 최소화
3. **사용자 중심**: 직관적인 인터페이스
4. **확장 가능**: 미래 기능 고려

## **키워드 설정**
- **표준 키워드**: `['나는솔로', '나는 솔로', '나솔']`
- **검색 범위**: 최신 뉴스 10개씩
- **정렬**: 날짜순 (최신순)

## **데이터 처리 단계**
1. **네이버 API 호출** → 2. **HTML 정규화** → 3. **출연자 추출** → 4. **중복 제거** → 5. **DB 저장**

## **중복 기사 차단 시스템 (Content Hash 기반)**
- **목적**: 수집 시점에 "최근 24시간" 기사와 비교해 중복이면 저장을 건너뛴다.
- **방식**: 제목 + 요약을 SHA-256으로 해시화하여 정확한 매칭
- **임계치**: 완전히 동일한 content_hash만 중복으로 판정
- **스키마**: `content_hash TEXT` 컬럼과 인덱스 추가
- **운영 정책**: 중복이면 저장 스킵, 비중복이면 content_hash와 함께 저장
- **장점**: 외부 API 의존성 없음, 빠른 성능, 정확한 중복 판정

## **허깅페이스 관련 주의사항**
- **사용 금지**: 허깅페이스 API는 안정성 문제로 사용하지 않음
- **대안**: content_hash 기반 중복 방지 사용
- **기존 코드**: embedding 관련 코드 모두 제거됨
- **마이그레이션**: embedding 컬럼 제거, content_hash 컬럼 추가

## **Cron 작업 설정 규칙**
- **확장 설치**: `pg_cron`과 `http` 확장 필수
- **인증 방식**: Edge Function에서 다중 인증 지원
  - Authorization 헤더
  - X-Cron-Auth 헤더
  - cron 쿼리 파라미터
- **스케줄 표현식**: `0 * * * *` (매시 정각)
- **실행 확인**: function_logs 테이블에서 성공/실패 로그 확인
- **문제 해결**: Edge Function 로그에서 오류 상세 확인

## **Edge Function 인증 개선**
- **다중 인증**: cron 호출 시 다양한 인증 방식 지원
- **유연성**: Authorization 헤더 없어도 X-Cron-Auth나 쿼리 파라미터로 인증 가능
- **보안**: 여전히 인증된 호출만 허용
- **디버깅**: 인증 실패 시 명확한 오류 메시지 제공

## **API 응답 형식**
```typescript
{
  success: boolean;
  data: NewsArticle[];
  total: number;
  pagination: {
    limit: number;
    offset: number;
    hasMore: boolean;
  }
}
```

## **뉴스 기사 타입**
```typescript
interface NewsArticle {
  id: string;
  title: string;
  article_url: string;
  source: string;
  published_at: string;
  summary?: string;
  keywords?: string[];
  cast_members?: string[];
  cluster_id?: string;
  hash: string;
  content_hash?: string; // 제목+요약 기반 중복 판정용 해시
}
```

description:
globs:
alwaysApply: false
---

## 배포 규칙(간단)
- Edge Functions 파일(`supabase/functions/**/*.ts`)을 수정하면 즉시 배포한다.
- DB 마이그레이션(`supabase/migrations/*.sql`) 추가/수정 시 즉시 적용한다.
- 기본 순서: MCP로 실행 가능하면 MCP 우선 → 불가 시 CLI 명령어 안내.
- 상세 규칙은 `deploy-on-change.mdc`를 따른다.

## **scheduled-news-fetch Edge Function 규칙**

### **핵심 기능**
- **자동 뉴스 수집**: 네이버 뉴스 API에서 "나는솔로", "나솔" 키워드로 검색
- **중복 방지**: content_hash 기반 24시간 내 중복 기사 차단
- **출연자 추출**: 정규식으로 한국어 이름 패턴 매칭
- **썸네일 보강**: 저장 후 enrich-thumbnails 함수 자동 호출

### **인증 방식**
- **JWT 인증 해제 필수**: `verify_jwt: false` 설정 필요
- **Dashboard 설정**: Edge Functions → scheduled-news-fetch → Settings → "Verify JWT" 체크 해제
- **CLI 설정**: `supabase functions update scheduled-news-fetch --no-verify-jwt`
- **문제 증상**: 401 Unauthorized 오류 발생 시 JWT 인증 해제 필요

### **중복 방지 로직**
- **content_hash 생성**: 제목 + 요약을 SHA-256 해시화
- **비교 범위**: 최근 24시간 기사 (MAX_COMPARE=300개)
- **정확 매칭**: 완전히 동일한 content_hash만 중복으로 판정
- **성능**: 인덱스 활용으로 빠른 검색

### **데이터 처리 흐름**
1. **키워드 검색**: "나는솔로", "나솔" 각각 10개씩
2. **관련성 필터**: 제목/요약에 키워드 포함 여부 확인
3. **중복 확인**: content_hash 기반 24시간 내 중복 검사
4. **출연자 추출**: 정규식으로 "씨", "님" 패턴 매칭
5. **DB 저장**: upsert로 중복 URL 방지
6. **썸네일 보강**: enrich-thumbnails 함수 트리거

### **환경 변수 필수**
- `NAVER_CLIENT_ID`: 네이버 API 클라이언트 ID
- `NAVER_CLIENT_SECRET`: 네이버 API 클라이언트 시크릿
- `SUPABASE_URL`: Supabase 프로젝트 URL
- `SUPABASE_SERVICE_ROLE_KEY`: Supabase 서비스 롤 키

### **로그 및 모니터링**
- **function_logs 테이블**: 성공/실패 로그 자동 저장
- **실행 시간 측정**: 각 단계별 성능 모니터링
- **오류 처리**: 상세한 오류 메시지와 스택 트레이스

### **Cron 설정**
- **스케줄**: `0 * * * *` (매시 정각)
- **확장 필요**: `pg_cron`, `http` 확장 설치
- **테스트**: 수동 실행으로 기능 확인 가능

### **주의사항**
- **허깅페이스 사용 금지**: 안정성 문제로 content_hash 방식 사용
- **API 제한**: 네이버 API 호출 제한 고려
- **메모리 사용**: 대량 데이터 처리 시 메모리 관리
- **타임아웃**: 30초 내 완료되도록 최적화

### **문제 해결 과정 (중요!)**
- **401 오류 발생 시**: JWT 인증 해제 필요
- **cron 실행 안됨**: Dashboard에서 cron 작업 설정 필요
- **데이터 안들어옴**: Edge Function 로그 확인 후 JWT 설정 체크
- **배포 후 테스트**: function_logs와 articles 테이블로 결과 확인
